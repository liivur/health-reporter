<UserControl x:Class="HealthReporter.Controls.ClientUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HealthReporter.Controls"
              MouseDown="Window_MouseDown" 
             mc:Ignorable="d" Height="auto" Width="auto">
    <UserControl.Resources>
        <Image x:Key="Dustbin" Source="/Images/dustbin.png" Stretch="Uniform"/>
        <ControlTemplate x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Border x:Name="button" CornerRadius="100" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="button" Value="#FFC2C5C7"/>
                    <Setter Property="Background" TargetName="button" Value="#FFF0F0F0"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" TargetName="button" Value="#FFC2C5C7"/>
                    <Setter Property="Background" TargetName="button" Value="#FFF0F0F0"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="button" Value="#FFC2C5C7"/>
                    <Setter Property="Background" TargetName="button" Value="#FFF0F0F0"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Border>
        <Grid Name="grid" Height="auto" Width="auto" >
            <Grid.RowDefinitions>
                <RowDefinition Height="70"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border BorderBrush="#FFF0F0F0" BorderThickness="2">
                <Grid Grid.Row="0" Background="White" HorizontalAlignment="Stretch" ShowGridLines="False" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" VerticalAlignment="Bottom">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  VerticalAlignment="Center">
                        <Button Background="White" x:Name="btnShowClients" Content="Clients" Click="btn_Clients"   VerticalAlignment="Top" BorderBrush="LightGray" Height="20"   Grid.Column="2" HorizontalAlignment="Center" Width="90">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="10,0,0,10"/>
                                </Style>
                            </Button.Resources>
                        </Button>
                        <Button BorderBrush="LightGray" Width="90" Background="White" x:Name="btnShowTests" Content="Tests" Click="btn_Tests"  VerticalAlignment="Top"  Height="20"  Grid.Column="2" HorizontalAlignment="Center" >
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="0,10,10,0"/>
                                </Style>
                            </Button.Resources>
                        </Button>
                    </StackPanel>
                </Border>
                    <TextBlock Grid.Row="1" x:Name="clientTotal" HorizontalAlignment="Center" Foreground="DarkSlateGray" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.75*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Row="1" Grid.Column="0"  Background="AliceBlue" />
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="35" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Button x:Name="allClientsButton" Margin="10,10,0,5" HorizontalContentAlignment="Left" VerticalAlignment="Center"  Grid.Row="0" Foreground="LightSlateGray"  Background="AliceBlue"  BorderThickness="0" Focusable="True" Content="All Clients" FontSize="14" Click="btn_ShowAllClients"/>

                    <TextBlock Grid.Row="1" Margin="10,10,10,5" Foreground="LightSlateGray" FontSize="14">Groups</TextBlock>
                    <DataGrid  Focusable="True" Grid.Row="2" Grid.Column="0" x:Name="groupDataGrid" HeadersVisibility="None" SelectionMode="Single" CanUserSortColumns="False" IsReadOnly="True" CellEditEnding="groupDataGrid_CellEditEnding"  SelectionChanged="groupsDataGrid_SelectionChanged" GridLinesVisibility="None" AutoGenerateColumns="False" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="13" Grid.RowSpan="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnTargetUpdated=True}" Width="*"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Delete" Click="MenuItem_Delete">
                                    <MenuItem.Icon>
                                        <Image Width="12" Height="12" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Rename" Click="MenuItem_Rename">
                                    <MenuItem.Icon>
                                        <Image Width="12" Height="12" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="True">
                                        <Setter Property="Background" Value="LightBlue" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type DataGrid}">
                                <Style.Triggers>
                                    <Trigger Property="IsHitTestVisible" Value="False">
                                        <Setter Property="Foreground" Value="Gray" />
                                        <Setter Property="Margin" Value="15,0,0,0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Height" Value="23"/>
                                <Setter Property="Background" Value="AliceBlue"/>
                                <Setter Property="Margin" Value="15,0,0,0" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Margin" Value="15,0,0,0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Grid>
                <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ResizeDirection="Columns"/>
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="55" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBox  x:Name="search" Grid.Row="0" Height="20"  Margin="30,20,30,5" HorizontalAlignment="Stretch"  TextWrapping="Wrap" VerticalAlignment="Top" TextChanged="filterSearchBox" GotFocus="search_GotFocus" >
                        <TextBox.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </TextBox.Resources>
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <TextBlock Text="Search" Foreground="Gray"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="{x:Null}">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <TextBlock Text="Search" Foreground="Gray"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush Stretch="None">
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBox Visibility="Hidden" x:Name="searchAllClients" Grid.Row="0" Height="20"  Margin="30,20,30,5" HorizontalAlignment="Stretch"  TextWrapping="Wrap" VerticalAlignment="Top" TextChanged="filterSearchBoxAllClients" GotFocus="search_GotFocus" >
                        <TextBox.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </TextBox.Resources>
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <TextBlock Text="Search All Clients" Foreground="Gray"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="{x:Null}">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <TextBlock Text="Search" Foreground="Gray"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush Stretch="None">
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <DataGrid Grid.Row="1" Focusable="True" Grid.Column="0" x:Name="clientDataGrid" HeadersVisibility="None" SelectionMode="Single" CanUserSortColumns="False" IsReadOnly="True"  SelectionChanged="clientDataGrid_SelectionChanged" GridLinesVisibility="None" AutoGenerateColumns="False" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="13" Grid.RowSpan="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding firstName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnTargetUpdated=True}" Width="*"/>
                        </DataGrid.Columns>
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="True">
                                        <Setter Property="Background" Value="#f5f5f5" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type DataGrid}">
                                <Style.Triggers>
                                    <Trigger Property="IsHitTestVisible" Value="False">
                                        <Setter Property="Foreground" Value="#f5f5f5" />
                                        <Setter Property="Margin" Value="15,0,0,0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Height" Value="23"/>
                                <Setter Property="Margin" Value="15,0,0,0" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#f5f5f5"/>
                                        <Setter Property="Margin" Value="15,0,0,0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Grid>
                <GridSplitter Grid.Column="3" Width="3" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" ResizeDirection="Columns" />
                <Grid  x:Name="clientDetailMain" Grid.Column="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60" />
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Visibility="Hidden" Grid.Row="1" x:Name="clientDetailDatagrid" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock  Foreground="LightSlateGray" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1" x:Name="Text1" Text="First Name" Margin="0,0,10,0"/>
                        <StackPanel Grid.Column="1" Grid.Row="1">
                            <TextBox Margin="10,0,0,0" HorizontalAlignment="Left"  x:Name="firstName"  TextWrapping="Wrap" 
                                 Text="{Binding firstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="140"  
                                 Validation.ErrorTemplate="{x:Null}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Style.Setters>
                                            <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
                                        </Style.Setters>
                                        <Style.Triggers>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderThickness" Value="0 0 0 2"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="AdornerSite" Foreground="Red"  FontWeight="Bold" FontSize="8" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=firstName}" Margin="5,0,0,0" />
                        </StackPanel>
                        <TextBlock Foreground="LightSlateGray" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="2" x:Name="Text2" Text="Last Name" Margin="0,0,10,0"/>
                        <StackPanel Grid.Column="1" Grid.Row="2">
                            <TextBox Margin="10,0,0,0" HorizontalAlignment="Left" x:Name="lastName"  TextWrapping="Wrap" 
                                 Text="{Binding lastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="140"  
                                 Validation.ErrorTemplate="{x:Null}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Style.Setters>
                                            <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
                                        </Style.Setters>
                                        <Style.Triggers>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderThickness" Value="0 0 0 2"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="AdornerSite2" Foreground="Red" FontWeight="Bold" FontSize="8" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=lastName}" Margin="5,0,0,0"/>
                        </StackPanel>
                        <TextBlock  Foreground="LightSlateGray" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="3" x:Name="Text3" Text="Email" Margin="0,0,10,0"/>
                        <StackPanel Grid.Column="1" Grid.Row="3">
                            <TextBox Margin="10,0,0,0" HorizontalAlignment="Left" x:Name="email"  TextWrapping="Wrap" 
                                     Text="{Binding email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="140"  
                                     Validation.ErrorTemplate="{x:Null}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Style.Setters>
                                            <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
                                        </Style.Setters>
                                        <Style.Triggers>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderThickness" Value="0 0 0 2"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="AdornerSite3" Foreground="Red" FontWeight="Bold" FontSize="8" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=email}" Margin="5,0,0,0"/>
                        </StackPanel>
                        <TextBlock Foreground="LightSlateGray" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="4" x:Name="Text4" Text="Gender" Margin="0,0,10,0"/>
                        <StackPanel Grid.Column="1" Grid.Row="4">
                            <ComboBox Margin="10,0,0,0" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" HorizontalAlignment="Left" Style="{StaticResource ComboBoxFlatStyle}"   Text="{Binding gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  x:Name="gender" 
                                         Width="140"
                                        Validation.ErrorTemplate="{x:Null}">
                                <ComboBoxItem Content="1"></ComboBoxItem>
                                <ComboBoxItem Content="0" />
                            </ComboBox>
                            <Label x:Name="AdornerSite4" Foreground="Red" FontWeight="Bold" FontSize="8" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=gender}" Margin="5,0,0,0"/>
                        </StackPanel>
                        <TextBlock Foreground="LightSlateGray" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="5" x:Name="Text5" Text="Date of Birth" Margin="0,0,10,0"/>
                        <StackPanel Grid.Column="1" Grid.Row="5">
                            <DatePicker Margin="10,0,0,0" HorizontalAlignment="Left" x:Name="birthDate"  Width="140"  DisplayDate="2016-09-29" 
                                        SelectedDate="{Binding birthDate, StringFormat='d', ConverterCulture=en-GB, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                        IsTodayHighlighted="False" FirstDayOfWeek="Monday" Validation.ErrorTemplate="{x:Null}" >
                                <DatePicker.Resources>
                                    <Style TargetType="{x:Type DatePicker}">
                                        <Style.Setters>
                                            <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
                                        </Style.Setters>
                                        <Style.Triggers>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderThickness" Value="0 0 0 2"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DatePicker.Resources>
                            </DatePicker>
                            <Label x:Name="AdornerSite5" Foreground="Red" FontWeight="Bold" FontSize="8" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=birthDate}" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Grid>
                    <TextBlock HorizontalAlignment="Center"  VerticalAlignment="Top" x:Name="NoCards" Visibility="Hidden" Grid.Row="1" Grid.Column="0" Grid.RowSpan="5" Grid.ColumnSpan="2"  Foreground="LightSlateGray" FontSize="14">
                        No Cards
                    </TextBlock>
                    <Button  Grid.Row="2" Margin="20,20,20,20" x:Name="addStuff" ContextMenuService.IsEnabled="False" Content="+" HorizontalAlignment="Left" VerticalAlignment="Bottom" Click="btn_AddStuff" Height="30" BorderBrush="#FFA2B2BD"  Background="White" FontSize="16"  Width="30">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </Button.Resources>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem  Header="New group" Click="btn_AddNewGroup"/>
                                <MenuItem Header="New client" Click="btn_AddNewClient"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Visibility="Hidden" Content="{StaticResource Dustbin}" Padding="6" Grid.Row="2" Margin="20,20,20,20" x:Name="delete" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="btn_Delete" Height="30" BorderBrush="#FFA2B2BD"  Background="White" FontSize="12"  Width="30">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</UserControl>
